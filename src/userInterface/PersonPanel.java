/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface;

import attributes.City;
import attributes.CityHistory;
import attributes.Community;
import attributes.CommunityHistory;
import attributes.Doctor;
import attributes.DoctorDirectory;
import attributes.Hospital;
import attributes.HospitalDirectory;
import attributes.House;
import attributes.HouseHistory;
import attributes.Patient;
import attributes.PatientDirectory;
import attributes.Person;
import attributes.PersonDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author dheer
 */
public class PersonPanel extends javax.swing.JPanel {

    /**
     * Creates new form PersonPanel
     */
    JPanel rightLayout;
    PersonDirectory personDirectory;
    DoctorDirectory doctorDirectory;
    PatientDirectory patientDirectory;
    HospitalDirectory hospitalDirectory;
     CityHistory cityHistory;
    HouseHistory houseHistory;
    CommunityHistory communityHistory;
    
    public PersonPanel(JPanel rightLayout,DoctorDirectory doctorDirectory,PersonDirectory personDirectory,PatientDirectory patientDirectory) {
        this.doctorDirectory=doctorDirectory;
        this.personDirectory=personDirectory;
        this.patientDirectory=patientDirectory;
        this.rightLayout= rightLayout;
        
        initComponents();
        this.hospitalDirectory= doctorDirectory.getDoctor().getHospitalDirectory();
         this.cityHistory=doctorDirectory.getDoctor().getHospitalDirectory().getCity().getCityHistory();
         this.communityHistory=doctorDirectory.getDoctor().getHospitalDirectory().getCity().getCommunity().getCommunityHistory();
         this.houseHistory=doctorDirectory.getDoctor().getHospitalDirectory().getCity().getCommunity().getHouse().getHouseHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton8 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txt6 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        txt1 = new javax.swing.JTextField();
        txt3 = new com.toedter.calendar.JDateChooser();
        jLabel43 = new javax.swing.JLabel();
        txt7 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        txt9 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        txt8 = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        txt5 = new javax.swing.JLabel();
        txt4 = new javax.swing.JTextField();
        txt10 = new javax.swing.JTextField();

        jButton8.setBackground(new java.awt.Color(255, 51, 51));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton8.setText("CLEAR");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8jButton2ActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setText("Visiting Date");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel29.setText(":");

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel37.setText(":");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel34.setText("Person Id");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel38.setText("Community");

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setText(":");

        txt6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt6MouseClicked(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel35.setText(":");

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel39.setText(":");

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel33.setText("NAME");

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel40.setText("Phone Number");

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel32.setText("                                                   Add New Person");

        jButton9.setBackground(new java.awt.Color(0, 0, 0));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("BACK");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9jButton1ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(51, 102, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton7.setText("SAVE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7jButton1ActionPerformed(evt);
            }
        });

        txt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt1MouseClicked(evt);
            }
        });

        txt3.setDateFormatString("yyyy-MM-dd");

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel43.setText("Doctor Id");

        txt7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt7MouseClicked(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel44.setText(":");

        txt9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt9MouseClicked(evt);
            }
        });
        txt9.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txt9InputMethodTextChanged(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel47.setText(":");

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel48.setText("House Number");

        txt8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt8MouseClicked(evt);
            }
        });

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel46.setText(":");

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel45.setText("Hospital Id");

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel49.setText(":");

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel50.setText("City");

        txt4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt4MouseClicked(evt);
            }
        });

        txt10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 997, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel36)
                                    .addGap(18, 18, 18)
                                    .addComponent(txt5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel35)
                                    .addGap(18, 18, 18)
                                    .addComponent(txt1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel44)
                                    .addGap(18, 18, 18)
                                    .addComponent(txt7)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel46)
                                .addGap(18, 18, 18)
                                .addComponent(txt8, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(153, 153, 153)
                                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel39)
                                            .addGap(18, 18, 18)
                                            .addComponent(txt6, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel29)
                                            .addGap(18, 18, 18)
                                            .addComponent(txt3, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel47)
                                            .addGap(18, 18, 18)
                                            .addComponent(txt9))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel37))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel49)))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txt4)
                                                .addComponent(txt10)))))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7jButton1ActionPerformed
        String name=  txt1.getText();
        String id1= txt5.getText().replace("PE00","");
        String id=txt5.getText().replace("P00","");
        String date =String.valueOf(txt3.getDate());
        String houseNumber= txt9.getText().replace("H0", "");
        String community= txt4.getText();
        String phoneNumber= txt6.getText();
        String doctorId= (txt7.getText()).replace("D00","");
        String hospitalId= txt8.getText().replace("H00", "");
        String city= txt10.getText();

        if(name.equals("")){
            JOptionPane.showMessageDialog(this, "Person Name is Mandatory..!!");
        }else if(id.equals("")){
            JOptionPane.showMessageDialog(this, "Person Id is Mandatory..!!");
        }else if(houseNumber.equals("")){
            JOptionPane.showMessageDialog(this, "Person House Number is Mandatory..!!");
        }else if(date.equals("")){
            JOptionPane.showMessageDialog(this, "Visiting Date is Mandatory..!!");
        }else if(phoneNumber.matches("")){
            JOptionPane.showMessageDialog(this, "Person Phone Number is Mandatory..!!");
        }else if(city.matches("")){
            JOptionPane.showMessageDialog(this, "Person City is Mandatory..!!");
        }else if(phoneNumber.length()<10 || phoneNumber.length()>10){
            JOptionPane.showMessageDialog(this, "Please Enter a Valid PhoneNumber..!!");
        }else{
            Date date1=null;
            try{
                date1= new Date(date);
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Patient Admit Date is Mandatory..!!");
            }
            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            String regDate=f.format(date1);
            LocalDate newDate = LocalDate.now();
            String newDate1 = String.valueOf(newDate);
            Integer year = Integer.parseInt(regDate.substring(0,4));
            Integer month = Integer.parseInt(regDate.substring(5,7));
            Integer day = Integer.parseInt(regDate.substring(8,10));

            Integer newYear = Integer.parseInt(newDate1.substring(0,4));
            Integer newMonth = Integer.parseInt(newDate1.substring(5,7));
            Integer newDay = Integer.parseInt(newDate1.substring(8,10));
            String regPhoneNumber="^(\\+\\d{1,3}( )?)?((\\(\\d{3}\\))|\\d{3})[- .]?\\d{3}[- .]?\\d{4}$"
            + "|^(\\+\\d{1,3}( )?)?(\\d{3}[ ]?){2}\\d{3}$"
            + "|^(\\+\\d{1,3}( )?)?(\\d{3}[ ]?)(\\d{2}[ ]?){2}\\d{2}$";
            int phone=0;
            String phone1=phoneNumber;
            phone1=phone1.replace("-","");
            phone1=phone1.replace("(","");
            phone1=phone1.replace(")","");
            phone1=phone1.replace(" ","");
            phone1=phone1.replace("+91","");
            phone1=phone1.replace("+1","");
            for(Person info1: personDirectory.getPersonDirectory()){
                String phoneNumber1= info1.getPhoneNumber();
                String phone2=phoneNumber1;
                phone2=phone2.replace("-","");
                phone2=phone2.replace("(","");
                phone2=phone2.replace(")","");
                phone2=phone2.replace(" ","");
                phone2=phone2.replace("+91","");
                phone2=phone2.replace("+1","");
                if(phone1.matches(phone2)){
                    phone++;
                }
            }
            for(Patient info1: patientDirectory.getPatientDirectory()){
                String phoneNumber1= info1.getPhoneNumber();
                String phone3=phoneNumber1;
                phone3=phone3.replace("-","");
                phone3=phone3.replace("(","");
                phone3=phone3.replace(")","");
                phone3=phone3.replace(" ","");
                phone3=phone3.replace("+91","");
                phone3=phone3.replace("+1","");
                if(phone1.matches(phone3)){
                    phone++;
                }
            }
            int doctor=0;
            for(Doctor doc: doctorDirectory.getDoctorDirectory() ){
                String doc1=doc.getDoctorId();
                if(doctorId.matches(doc1) || (doctorId.isEmpty())){
                    doctor++;
                }
            }

            int h=0;
            for(Hospital doc: hospitalDirectory.getHospitalDirectory() ){
                String doc1=doc.getHospitalId();
                if(hospitalId.matches(doc1) || (hospitalId.isEmpty())){
                    h++;
                }
            }
            int community2=0;
            for(Hospital doc: hospitalDirectory.getHospitalDirectory() ){

                String community1= doc.getCommunity();
                if(community.equalsIgnoreCase(community1)){
                    community2++;
                }
            }
            int city2=0;
            for(Hospital doc: hospitalDirectory.getHospitalDirectory() ){

                String city1= doc.getCity();
                if(city.equalsIgnoreCase(city1)){
                    city2++;
                }
            }
            int hospital=0;
            for(Community doc: communityHistory.getCommunityHistory() ){
                String doc1=doc.getCommunityName();
                 String city1=doc.getCityId();
                for(City ci: cityHistory.getCityHistory()){
                    if(city1.equalsIgnoreCase(ci.getCityId())){
                        city1= ci.getCityName();
                    }
                if((community.equalsIgnoreCase(doc1) &&  city.equalsIgnoreCase(city1))|| (community.isEmpty())){
                    hospital++;
                }}
            }
            int house=0;
            for(House ho: houseHistory.getHouseHistory() ){
                String house1= ho.getHouseNumber();
                if(houseNumber.equalsIgnoreCase(house1)){
                    house++;
                }
            }
            int d= 0;
            for(Doctor doc: doctorDirectory.getDoctorDirectory() ){
                if(doctorId.equalsIgnoreCase(doc.getDoctorId())){
                String doc1=doc.getHosiptalId();
                if(hospitalId.matches(doc1)){
                    d++;
                }
                }
            }
            char ph = phoneNumber.charAt(0);
            if (!name.matches("^[a-zA-z ]*$")){
                JOptionPane.showMessageDialog(this, "Please Enter a Valid Patient Name");
            }else if (!city.matches("^[a-zA-z ]*$")){
                JOptionPane.showMessageDialog(this, "Please Enter a Valid City Name");
            }else if(year>newYear){
                JOptionPane.showMessageDialog(this, "Please Enter a Valid Date");
            }else if(year<=newYear && month>newMonth){
                JOptionPane.showMessageDialog(this, "Please Enter a Valid Date");
            }else if(year>newYear && month>newMonth){
                          JOptionPane.showMessageDialog(this, "Please Enter a Valid Date");
              }else if(year.equals(newYear) && month.equals(newMonth) && day>newDay){
                          JOptionPane.showMessageDialog(this, "Please Enter a Valid Date");
              }else if(house<=0){
                JOptionPane.showMessageDialog(this, "House Number doesn't registered in any community!!");
            }else if(!phoneNumber.matches(regPhoneNumber)){
                JOptionPane.showMessageDialog(this, "Please Enter a Valid Phone Number");
            }else if(ph == ' '){
                JOptionPane.showMessageDialog(this, "Please Enter a Valid Phone Number");
            }else if(phone>0){
                JOptionPane.showMessageDialog(this, "Phone Number Already exists. Please provide different Phone Number");
            } else if(hospital<=0){
                         JOptionPane.showMessageDialog(this, ""+city+" doesnot have "+community+"");
                         }else{
                if(doctorId.matches("")){
                    Person p= personDirectory.addPerson();
                    p.setPersonName(name);
                    p.setPersonId(id1);
                    p.setVisitingDate(new Date(date));
                    p.setHouseNumber(houseNumber);
                    p.setCommunity(community);
                    p.setPhoneNumber(phoneNumber);
                    p.setCity(city);
                    JOptionPane.showMessageDialog(this, ""+name+"'s Person Profile has been Created successfully..!!");
                    txt1.setText("");
                    txt4.setText("");
                    txt3.setDate(null);
                    txt4.setText("");
                    txt5.setText("");
                    txt6.setText("");
                    txt8.setText("");
                    txt9.setText("");
                    txt10.setText("");
                }else{
                  
                    if(doctorDirectory.getDoctorDirectory().isEmpty() && !doctorId.matches("")){
                        JOptionPane.showMessageDialog(this, "No Doctor is Available to Assist Patient");
                    }else if(hospitalDirectory.getHospitalDirectory().isEmpty() ){
                        JOptionPane.showMessageDialog(this, "No Hospital is Available to Admit Patient");
                    }else if(doctor<=0){
                        JOptionPane.showMessageDialog(this, "Doctor Id doesn't Matches with any Doctor Id. Please Enter Valid DoctorId...!!");
                    }else if(h<=0){
                        JOptionPane.showMessageDialog(this, "No Hospital is Available is Assigned for the given Id.");
                    }else if(community2<=0){
                        JOptionPane.showMessageDialog(this, "Hospital doesnot belongs to this community..!!");
                    }else if(city2<=0){
                        JOptionPane.showMessageDialog(this, "Hospital doesnot belongs to this city..!!");
                    }else if(d<=0){
                        JOptionPane.showMessageDialog(this, "Doctor doesnot belong to this Hospital..!!");
                    }else{
                        Patient p= patientDirectory.addPatient();
                        p.setPatientName(name);
                        p.setPatientId(id);
                        p.setDoctorId(doctorId);
                        p.setAdmitDate(new Date(date));
                        p.setHouseNumber(houseNumber);
                        p.setCommunity(community);
                        p.setPhoneNumber(phoneNumber);
                        p.setHospitalId(hospitalId);
                        p.setCity(city);

                        JOptionPane.showMessageDialog(this, ""+name+"'s Patient Profile has been Created successfully..!!");
                        txt1.setText("");
                        txt4.setText("");
                        txt3.setDate(null);
                        txt4.setText("");
                        txt5.setText("");
                        txt6.setText("");
                        txt7.setText("");
                        txt8.setText("");
                        txt9.setText("");
                        txt10.setText("");
                    }      }  }}
    }//GEN-LAST:event_jButton7jButton1ActionPerformed

    private void jButton9jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9jButton1ActionPerformed
        rightLayout.remove(this);
        Component [] componentArray = rightLayout.getComponents();
        Component c = componentArray[componentArray.length-1];
        PersonDirectoryPanel ms = (PersonDirectoryPanel) c;
        ms.table();
        CardLayout layout = (CardLayout) rightLayout.getLayout();
        layout.previous(rightLayout);
    }//GEN-LAST:event_jButton9jButton1ActionPerformed

    private void txt6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt6MouseClicked
        //  String street=txt5.getText();
        //       String hospitalId= txt8.getText().replace("H00", "");
        //        String code="";
        //            for(Hospital doc: hospitalDirectory.getHospitalDirectory() ){
            //                String doc1=doc.getPostalCode();
            //                 if(hospitalId.matches(doc1)){
                //                    code=doc.getPostalCode();
                //                }
            //            }
        //       if(!street.matches(code)){
            //                    JOptionPane.showMessageDialog(this, "This Hospital is not near to your community");
            //            }

        // TODO add your handling code here:S
    }//GEN-LAST:event_txt6MouseClicked

    private void jButton8jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8jButton2ActionPerformed
            txt1.setText("");
                        txt4.setText("");
                        txt3.setDate(null);
                        txt4.setText("");
                        txt5.setText("");
                        txt6.setText("");
                        txt7.setText("");
                        txt8.setText("");
                        txt9.setText("");
                        txt10.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8jButton2ActionPerformed

    private void txt8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt8MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txt8MouseClicked

    private void txt9InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txt9InputMethodTextChanged
      
        // TODO add your handling code here:
    }//GEN-LAST:event_txt9InputMethodTextChanged

    private void txt9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt9MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txt9MouseClicked

    private void txt7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txt7MouseClicked

    private void txt1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt1MouseClicked
        int z=0;
        String docId1 =null;
        String doctorId= txt7.getText();
        if(doctorId.matches("")){
            Person y = new Person();

            if(y.getPersonId() == null ){
                txt5.setText("PE00"+"1");
            }
            for(Person info1: personDirectory.getPersonDirectory()){
                if(info1.getPersonId().isEmpty()){
                    txt5.setText("PE00"+"1");
                }
                docId1=info1.getPersonId();
                z= Integer.parseInt(docId1);
            }

            txt5.setText("PE00"+String.valueOf(++z));
        }else{
            Patient y = new Patient();

            if(y.getPatientId() == null ){
                txt5.setText("P00"+"1");
            }
            for(Patient info1: patientDirectory.getPatientDirectory()){
                if(info1.getPatientId().isEmpty()){
                    txt5.setText("P00"+"1");
                }
                docId1=info1.getPatientId();
                z= Integer.parseInt(docId1);
            }

            txt5.setText("P00"+String.valueOf(++z));
        }
    }//GEN-LAST:event_txt1MouseClicked

    private void txt4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt4MouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_txt4MouseClicked

    private void txt10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt10MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txt10MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txt10;
    private com.toedter.calendar.JDateChooser txt3;
    private javax.swing.JTextField txt4;
    private javax.swing.JLabel txt5;
    private javax.swing.JTextField txt6;
    private javax.swing.JTextField txt7;
    private javax.swing.JTextField txt8;
    private javax.swing.JTextField txt9;
    // End of variables declaration//GEN-END:variables
}
