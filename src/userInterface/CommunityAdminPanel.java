/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface;

import attributes.City;
import attributes.CityHistory;
import attributes.Community;
import attributes.CommunityAdmin;
import attributes.CommunityAdminDirectory;
import attributes.CommunityHistory;
import attributes.Doctor;
import attributes.DoctorDirectory;
import attributes.Hospital;
import attributes.HospitalDirectory;
import attributes.House;
import attributes.HouseHistory;
import attributes.Patient;
import attributes.PatientDirectory;
import attributes.Person;
import attributes.PersonDirectory;
import attributes.SystemAdmin;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dheer
 */
public class CommunityAdminPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommunityPanel
     */
    JPanel rightLayout;
  SystemAdmin systemAdmin;
    DoctorDirectory doctorDirectory;
    PatientDirectory patientDirectory;
    PersonDirectory personDirectory;
    HospitalDirectory hospitalDirectory;
    CityHistory cityHistory;
    CommunityHistory communityHistory;
    HouseHistory houseHistory;
        CommunityAdminDirectory communityAdminDirectory;
    public CommunityAdminPanel(JPanel rightLayout,SystemAdmin systemAdmin) {
        
     this.systemAdmin= systemAdmin;
    
      patientDirectory=systemAdmin.getPatientDirectory();
      doctorDirectory= systemAdmin.getDoctorDirectory();
      personDirectory= systemAdmin.getPersonDirectory();
      communityAdminDirectory=doctorDirectory.getDoctor().getHospitalDirectory().getCity().getCommunity().getCommunityAdminDirectory();
        this.rightLayout=rightLayout;
       
        initComponents();
                
        this.hospitalDirectory=doctorDirectory.getDoctor().getHospitalDirectory();
                 this.cityHistory=doctorDirectory.getDoctor().getHospitalDirectory().getCity().getCityHistory();
    this.communityHistory=doctorDirectory.getDoctor().getHospitalDirectory().getCity().getCommunity().getCommunityHistory();
             this.houseHistory=doctorDirectory.getDoctor().getHospitalDirectory().getCity().getCommunity().getHouse().getHouseHistory(); 
              
    table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel48 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        txt2 = new javax.swing.JTextField();
        txt3 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txt1 = new javax.swing.JLabel();

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "HouseNumber", "Community", "City"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel48.setText("House Number");

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel37.setText(":");

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel49.setText(":");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel38.setText("Community");

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel50.setText("City");

        txt2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt2MouseClicked(evt);
            }
        });
        txt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt2ActionPerformed(evt);
            }
        });

        txt3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt3MouseClicked(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel47.setText(":");

        jButton1.setBackground(new java.awt.Color(51, 102, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 0, 51));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 937, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel47)
                        .addGap(18, 18, 18)
                        .addComponent(txt1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel37))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel49)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt2)
                            .addComponent(txt3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 25, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(161, 161, 161))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txt2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt2MouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_txt2MouseClicked

    private void txt3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txt3MouseClicked

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
            int selected =table.getSelectedRow();
        if(selected<0){
            JOptionPane.showMessageDialog(this, "No Row has been selected");
            return;
        }
        DefaultTableModel tbl= (DefaultTableModel)table.getModel();
         CommunityAdmin selectedCommunity= (CommunityAdmin)tbl.getValueAt(selected, 0);
        txt1.setText("H0"+selectedCommunity.getHouseNumber());
        txt2.setText(selectedCommunity.getCommunity());
        txt3.setText(selectedCommunity.getCity());


        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selected =table.getSelectedRow();
        if(selected<0){
            JOptionPane.showMessageDialog(this, "No Row has been selected");
            return;
        }
        DefaultTableModel tbl= (DefaultTableModel)table.getModel();
           CommunityAdmin selectedCommunity= (CommunityAdmin)tbl.getValueAt(selected, 0);
        String houseNumber= txt1.getText().replaceAll("H0", "");
        String community= txt2.getText().replaceAll("CM", "");
        String city= txt3.getText().replaceAll("C00", "");
        
        
        for(City c: cityHistory.getCityHistory()){
            if(selectedCommunity.getCity().equalsIgnoreCase(c.getCityName())){
                c.setCityName(city);
            }
        }
        
         for(Community c: communityHistory.getCommunityHistory()){
            if(selectedCommunity.getCommunity().equalsIgnoreCase(c.getCommunityName())){
                c.setCommunityName(community);
            }
        }
        String s=selectedCommunity.getCommunity();
         for(CommunityAdmin ca: communityAdminDirectory.getCommunityAdminDirectory()){
             if(s.equalsIgnoreCase(ca.getCommunity())){
                 ca.setCommunity(community);
             }
         }
         String s1=selectedCommunity.getCity();
         for(CommunityAdmin ca: communityAdminDirectory.getCommunityAdminDirectory()){
             if(s1.equalsIgnoreCase(ca.getCity())){
                 ca.setCity(city);
             }
         }
        
        
        selectedCommunity.setCity(city);
        selectedCommunity.setCommunity(community);
        selectedCommunity.setHouseNumber(houseNumber);
        
         JOptionPane.showMessageDialog(this, "Community has been Modified successfully...!!");
        txt1.setText("");
        txt2.setText("");
        txt3.setText("");
       table();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  int selected =table.getSelectedRow();

        if(selected<0){

            JOptionPane.showMessageDialog(this, "No Row has been selected");
            return;
        }

        DefaultTableModel tbl= (DefaultTableModel)table.getModel();

        CommunityAdmin selectedCommunity= (CommunityAdmin)tbl.getValueAt(selected, 0);
        communityAdminDirectory.delete(selectedCommunity);
        Community co2=new Community();
        House ho= new House();
        String cityId= "";
        for(City ci: cityHistory.getCityHistory()){
            if(selectedCommunity.getCity().equalsIgnoreCase(ci.getCityName())){
                cityId= ci.getCityId();
            }
        }
        String communityId="";
        for(Community co: communityHistory.getCommunityHistory()){
            if(selectedCommunity.getCommunity().equalsIgnoreCase(co.getCommunityName())){
                communityId= co.getCommunityId();
            }
        }
        int count=0;
        for(CommunityAdmin ca: communityAdminDirectory.getCommunityAdminDirectory()){
        if(selectedCommunity.getCommunity().equalsIgnoreCase(ca.getCommunity())){
            ++count;
        }    
        }
      
        if(count<=0){
        for(Community co: communityHistory.getCommunityHistory()){
            if((selectedCommunity.getCommunity()).equalsIgnoreCase(co.getCommunityName()) && cityId.equalsIgnoreCase(co.getCityId())){
                 co2=co;    
                 
            }
        }
        communityHistory.delete(co2);
        
        
        
         for(House h: houseHistory.getHouseHistory()){
            if((selectedCommunity.getHouseNumber()).equalsIgnoreCase(h.getHouseNumber()) && communityId.equalsIgnoreCase(h.getCommunityId())){
                 ho=h;    
            }
        }
        houseHistory.delete(ho);
        }else{
            for(House h: houseHistory.getHouseHistory()){
            if((selectedCommunity.getHouseNumber()).equalsIgnoreCase(h.getHouseNumber()) && communityId.equalsIgnoreCase(h.getCommunityId())){
                 ho=h;    
            }
        }
        houseHistory.delete(ho);
        }
        JOptionPane.showMessageDialog(this, "Community Deleted Successfully..!!");
        txt1.setText("");
        txt2.setText("");
        txt3.setText("");

        table();                



        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JLabel txt1;
    private javax.swing.JTextField txt2;
    private javax.swing.JTextField txt3;
    // End of variables declaration//GEN-END:variables

    public void table() {
      DefaultTableModel tbl = (DefaultTableModel)table.getModel();
        tbl.setRowCount(0);
       
     for(CommunityAdmin c1: communityAdminDirectory.getCommunityAdminDirectory()){
     Object[] row= new Object[10];
          row[0]=c1;
          row[1]=c1.getCommunity();
          row[2]=c1.getCity();
          tbl.addRow(row);
     }
  } 
}
