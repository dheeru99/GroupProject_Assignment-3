/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface;

import attributes.City;
import attributes.CityHistory;
import attributes.Community;
import attributes.CommunityAdmin;
import attributes.CommunityAdminDirectory;
import attributes.CommunityHistory;
import attributes.DoctorDirectory;
import attributes.Hospital;
import attributes.HospitalDirectory;
import attributes.House;
import attributes.HouseHistory;
import attributes.PatientDirectory;
import attributes.Person;
import attributes.PersonDirectory;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dheer
 */
public class CityDirectoryPanel extends javax.swing.JPanel {

    /**
     * Creates new form CityPanel
     */
         JPanel rightLayout;
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;
    DoctorDirectory doctorDirectory;
    HospitalDirectory hospitalDirectory;
    CityHistory cityHistory;
    CommunityHistory communityHistory;
    CommunityAdminDirectory communityAdminDirectory;
    HouseHistory houseHistory;
    public CityDirectoryPanel(JPanel rightLayout,PersonDirectory personDirectory,PatientDirectory patientDirectory,DoctorDirectory doctorDirectory) {
        this.rightLayout= rightLayout;
        this.doctorDirectory=doctorDirectory;
        this.personDirectory= personDirectory;
        this.patientDirectory=patientDirectory;
        
        initComponents();
        this.hospitalDirectory= doctorDirectory.getDoctor().getHospitalDirectory();
        this.cityHistory=doctorDirectory.getDoctor().getHospitalDirectory().getCity().getCityHistory();
        table();
         this.communityHistory=doctorDirectory.getDoctor().getHospitalDirectory().getCity().getCommunity().getCommunityHistory();
          
           this.communityAdminDirectory=doctorDirectory.getDoctor().getHospitalDirectory().getCity().getCommunity().getCommunityAdminDirectory();
           this.houseHistory=doctorDirectory.getDoctor().getHospitalDirectory().getCity().getCommunity().getHouse().getHouseHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        txt2 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "City Id", "City Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("BACK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 153, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(51, 102, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton7.setText("UPDATE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7jButton1ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(255, 51, 51));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton8.setText("DELETE");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8jButton2ActionPerformed(evt);
            }
        });

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel45.setText("City Id");

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel46.setText(":");

        txt2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel43.setText("City Name");

        txt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt1MouseClicked(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel44.setText(":");

        jButton5.setBackground(new java.awt.Color(51, 255, 51));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("       Community Portal  >>>");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 907, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel44)
                        .addGap(18, 18, 18)
                        .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel46)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(345, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       rightLayout.remove(this);
        CardLayout layout = (CardLayout) rightLayout.getLayout();
        layout.previous(rightLayout);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CityPanel doc = new CityPanel(rightLayout, doctorDirectory);
        rightLayout.add("CityPanel",doc);
        CardLayout layout = (CardLayout)rightLayout.getLayout();
        layout.next(rightLayout);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7jButton1ActionPerformed
        DefaultTableModel tbl= (DefaultTableModel)table.getModel();
        int selected =table.getSelectedRow();
         if(selected<0){
             JOptionPane.showMessageDialog(this, "No Row has been selected");
             return;
         }
        City selectedCity= (City)tbl.getValueAt(selected, 0);
        
        String name=  txt1.getText();
        String id= txt2.getText().replace("C00","");
        int c2=0;
        for(City c1: cityHistory.getCityHistory()){
            if(name.equalsIgnoreCase(c1.getCityName()) && !name.equalsIgnoreCase(selectedCity.getCityName())){
                c2++;
            }
        }
        if(name.equals("")){
            JOptionPane.showMessageDialog(this, "City Name is Mandatory..!!");
        }else if (!name.matches("^[a-zA-z ]*$")){
                JOptionPane.showMessageDialog(this, "Please Enter a Valid City Name");
            }else if(c2>0){
                 JOptionPane.showMessageDialog(this, "City you have Entered is Already present in the database.");
            }else{
                
                 String s1=selectedCity.getCityName();
         for(CommunityAdmin ca: communityAdminDirectory.getCommunityAdminDirectory()){
             if(s1.equalsIgnoreCase(ca.getCity())){
                 ca.setCity(name);
             }
         }
           
            selectedCity.setCityId(id);
            selectedCity.setCityName(name);
            JOptionPane.showMessageDialog(this, ""+name+" city Updated Successfully..!!");
            txt1.setText("");
            txt2.setText("");
            table();
        }
    }//GEN-LAST:event_jButton7jButton1ActionPerformed

    private void jButton8jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8jButton2ActionPerformed
        int selected =table.getSelectedRow();

        if(selected<0){

            JOptionPane.showMessageDialog(this, "No Row has been selected");
            return;
        }

        DefaultTableModel tbl= (DefaultTableModel)table.getModel();

        City selectedCity= (City)tbl.getValueAt(selected, 0);
         ArrayList<Community> arr= new ArrayList<>();
        for(Community h1: communityHistory.getCommunityHistory()){
            if(selectedCity.getCityId().equalsIgnoreCase(h1.getCityId())){
                arr.add(h1);
            }
            
        }
         
        ArrayList<CommunityAdmin> h= new ArrayList<>();
        for(CommunityAdmin ca: communityAdminDirectory.getCommunityAdminDirectory()){
            if(selectedCity.getCityName().equalsIgnoreCase(ca.getCity())){
               h.add(ca);
            }
        }
        
        ArrayList<House> x= new ArrayList<>();
      for(Community h1: communityHistory.getCommunityHistory()){
            if(selectedCity.getCityId().equalsIgnoreCase(h1.getCityId())){
                    for(House y: houseHistory.getHouseHistory()){
                        if(h1.getCommunityId().equalsIgnoreCase(y.getCommunityId())){
                            x.add(y);
                        }
                    }
            }
            
        }
        
        for(Community h2: arr){
        communityHistory.delete(h2);
        }
        for(CommunityAdmin ca:h){
        communityAdminDirectory.delete(ca);
        }
        for(House h2: x){
        houseHistory.delete(h2);
        }
        cityHistory.delete(selectedCity);
        JOptionPane.showMessageDialog(this, "City Deleted Successfully..!!");
        txt1.setText("");
        txt2.setText("");
      
        table();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8jButton2ActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
                  int selected =table.getSelectedRow();
        if(selected<0){
            JOptionPane.showMessageDialog(this, "No Row has been selected");
            return;
        }
        DefaultTableModel tbl= (DefaultTableModel)table.getModel();
        City selectedCity= (City)tbl.getValueAt(selected, 0);
        
        
        
        txt1.setText(selectedCity.getCityName());
        txt2.setText("C00"+selectedCity.getCityId());
        

        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseClicked

    private void txt1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt1MouseClicked
       

        // TODO add your handling code here:
    }//GEN-LAST:event_txt1MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
     
            CommunityDirectoryPanel doc = new CommunityDirectoryPanel(rightLayout,personDirectory, doctorDirectory,patientDirectory);
            rightLayout.add("CommunityDirectoryPanel",doc);
            CardLayout layout = (CardLayout)rightLayout.getLayout();
            layout.next(rightLayout);


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txt1;
    private javax.swing.JLabel txt2;
    // End of variables declaration//GEN-END:variables

    public void table() {
         DefaultTableModel tbl = (DefaultTableModel)table.getModel();
      tbl.setRowCount(0);
      
        for(City ci: cityHistory.getCityHistory()){
          Object[] r =new Object[6];
          r[0]=ci;
          r[1]=ci.getCityName();
          tbl.addRow(r);
    }
}}
